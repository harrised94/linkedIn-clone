{"version":3,"sources":["InputOption.js","Post.js","firebase.js","features/counter/userSlice.js","Feed.js","HeaderOption.js","Header.js","Sidebar.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["InputOption","Icon","title","color","className","style","Post","forwardRef","ref","name","description","message","photoUrl","Avatar","src","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","Create","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","Image","Subscriptions","EventNote","CalendarViewDay","HeaderOption","avatar","Header","dispatch","useDispatch","alt","placeholder","Home","SupervisorAccount","BusinessCenter","Chat","Notifications","signOut","Sidebar","recentItem","topic","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","loginHandler","a","signInWithEmailAndPassword","userAuth","uid","photoURL","alert","registerHandler","createUserWithEmailAndPassword","updateProfile","console","log","Widgets","newsArticle","heading","subtitle","FiberManualRecord","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6170fecd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './InputOption.css'\r\n\r\nfunction InputOption({Icon, title, color }) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color: color}} />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@mui/icons-material'\r\nimport { Avatar } from '@mui/material'\r\nimport React, {forwardRef} from 'react'\r\nimport InputOption from './InputOption'\r\nimport \"./Post.css\"\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\r\n    return (\r\n        <div ref={ref} className='post'>\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltOutlined} title=\"Like\" color=\"gray\" />\r\n                <InputOption Icon={ChatOutlined} title=\"Comment\" color=\"gray\" />\r\n                <InputOption Icon={ShareOutlined} title=\"Share\" color=\"gray\" />\r\n                <InputOption Icon={SendOutlined} title=\"Send\" color=\"gray\" />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n})\r\n\r\nexport default Post\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA5TM4MyfsLbUCiH25uO7xb4drWoDDR54k\",\r\n    authDomain: \"linkedin-clone-fbe11.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-fbe11\",\r\n    storageBucket: \"linkedin-clone-fbe11.appspot.com\",\r\n    messagingSenderId: \"848387308957\",\r\n    appId: \"1:848387308957:web:a404ea8a02c5ebce418374\",\r\n    measurementId: \"G-SH9QJ5BNZV\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db, auth };","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    \r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n\r\n\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUser = (state) => state.user.user;\r\n\r\n\r\nexport default userSlice.reducer;\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"./Feed.css\"\r\nimport { CalendarViewDay, Create, EventNote, Image, Subscriptions } from '@mui/icons-material'\r\nimport InputOption from './InputOption'\r\nimport Post from './Post'\r\nimport { db } from './firebase'\r\nimport firebase from 'firebase'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/counter/userSlice'\r\nimport FlipMove from \"react-flip-move\"\r\n\r\nfunction Feed() {\r\nconst user = useSelector(selectUser);\r\nconst [input, setInput] = useState('');\r\nconst [posts, setPosts] = useState([]);\r\n\r\nuseEffect(() => {\r\n    db.collection(\"posts\").orderBy('timestamp', \"desc\").onSnapshot((snapshot) => \r\n        setPosts(\r\n            snapshot.docs.map((doc) => (\r\n            {\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            }))\r\n        )\r\n    );\r\n}, []);\r\n\r\nconst sendPost = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection('posts').add({\r\n        name: user.displayName,\r\n        description: user.email,\r\n        message: input,\r\n        photoUrl: user.photoUrl || \"\",\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(), \r\n    })\r\n\r\n    setInput(\"\");\r\n};\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <Create/> \r\n                    <form action=\"\">\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\r\n                        <button onClick={sendPost} type='submit'>Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={Image} title=\"Photo\" color=\"#70B5F9\"/>\r\n                    <InputOption Icon={Subscriptions} title=\"Video\" color=\"#E7A33E\"/>\r\n                    <InputOption Icon={EventNote} title=\"Event\" color=\"#c0cbcd\"/>\r\n                    <InputOption Icon={CalendarViewDay} title=\"Write article\" color=\"#7Fc15E\"/>\r\n                 \r\n                </div>\r\n            </div>\r\n            <FlipMove>\r\n           \r\n            {posts.map(({id, data: { name, description, message, photoUrl } }) =>(\r\n                <Post \r\n                    key={id}\r\n                    name={name}\r\n                    description={description}\r\n                    message={message}\r\n                    photoUrl={photoUrl}\r\n                />\r\n            ))}\r\n\r\n            </FlipMove>\r\n\r\n            \r\n        </div>\r\n            \r\n    \r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './HeaderOption.css'\r\nimport { Avatar } from '@mui/material'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/counter/userSlice'\r\n\r\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\r\n\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div>\r\n            <div onClick={onClick} className=\"headerOption\">\r\n                {Icon && <Icon className=\"headerOption__icon\"/>}\r\n                {avatar && (\r\n                    <Avatar className=\"headerOption__icon\"> {user?.email[0]}</Avatar>\r\n                )}\r\n                <h3 className=\"headerOption__title\">{ title }</h3>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport { BusinessCenter, Chat, Home, Notifications } from '@mui/icons-material';\r\nimport { SupervisorAccount } from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from './features/counter/userSlice';\r\nimport { auth } from './firebase'\r\nimport { logout } from './features/counter/userSlice'\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch(); \r\n    const logoutOfApp = () =>  {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    }\r\n        return (\r\n        <div className=\"header\">\r\n            \r\n            <div className=\"header__left\">\r\n                <img src=\"https://cdn3.iconfinder.com/data/icons/free-social-icons/67/linkedin_circle_black-512.png\" alt=\"\" />\r\n            \r\n                <div className=\"header__search\">\r\n                    <SearchIcon />\r\n                    <input placeholder=\"Search\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={Home} title=\"Home\" />\r\n                <HeaderOption Icon={SupervisorAccount} title=\"My Network\" />\r\n                <HeaderOption Icon={BusinessCenter} title=\"Jobs\" />\r\n                <HeaderOption Icon={Chat} title=\"Messaging\" />\r\n                <HeaderOption Icon={Notifications} title=\"Notifications\" />\r\n                <HeaderOption avatar={true}\r\n                title=\"me\" \r\n                onClick={logoutOfApp}/>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Avatar } from '@mui/material'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Sidebar.css'\r\nimport { selectUser } from './features/counter/userSlice'\r\n\r\nfunction Sidebar() {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://images.pexels.com/photos/2469122/pexels-photo-2469122.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=400\" alt=\"\" />\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\"> {user.email[0]}</Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n           \r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar__statNumber\"> 5,150\r\n                    </p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\"> 1,499\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n               {recentItem('reactjs')}\r\n               {recentItem('programming')}\r\n               {recentItem('design')}\r\n               {recentItem('developer')}\r\n               {recentItem('html')}\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"./features/counter/userSlice\";\r\n\r\nimport { auth } from \"./firebase\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userAuth = await auth.signInWithEmailAndPassword(email, password);\r\n\r\n      dispatch(\r\n        login({\r\n          email: userAuth.user.email,\r\n          uid: userAuth.user.uid,\r\n          displayName: userAuth.user.displayName,\r\n          photoUrl: userAuth.user.photoURL,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    if (!name) {\r\n      return alert(\"Please enter a full name!\");\r\n    }\r\n\r\n    try {\r\n      const userAuth = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      await userAuth.user.updateProfile({\r\n        displayName: name,\r\n        photoUrl: profilePic,\r\n      });\r\n\r\n      dispatch(\r\n        login({\r\n          email: userAuth.user.email,\r\n          uid: userAuth.user.uid,\r\n          displayName: name,\r\n          photoUrl: profilePic,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png\"\r\n        alt=\"Linkedin main logo\"\r\n      />\r\n\r\n      <form>\r\n        <input\r\n          placeholder=\"Full name (required for register)\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          placeholder=\"Profile pic URL (optional)\"\r\n          type=\"text\"\r\n          value={profilePic}\r\n          onChange={(e) => setProfilePic(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\" onClick={loginHandler}>\r\n          Sign In\r\n        </button>\r\n      </form>\r\n\r\n      <p>\r\n        Not a member?{\" \"}\r\n        <span className=\"login__register\" onClick={registerHandler}>\r\n          Register Now\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react'\r\nimport './Widgets.css'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { FiberManualRecord } from '@mui/icons-material';\r\n\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecord />\r\n            </div>\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon />\r\n            </div>\r\n            {newsArticle(\"Cows lose their jobs as milk prices drop\", 'Top news - 29 readers')}\r\n            {newsArticle(\"Global population to double by 2040, babies to blame\", '858 readers')}\r\n            {newsArticle(\"Breathing oxygen linked to staying alive\", '909999 readers')}\r\n            {newsArticle(\"Voters to vote on whether to vote\", '99 readers')}\r\n            {newsArticle(\"Murderer says detective ruined his reputation\", '9 readers')}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Feed from './Feed';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport {login, logout, selectUser} from \"./features/counter/userSlice\"\r\nimport Login from './Login';\r\nimport { auth } from \"./firebase\";\r\nimport Widgets from './Widgets';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"app\">\r\n\r\n        <Header />\r\n        {!user ? <Login /> :(\r\n\r\n          <div className=\"app__body\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n          </div>\r\n\r\n        )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/counter/userSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}